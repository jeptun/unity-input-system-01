//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/unity-input-system-01/input/InputControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputControls"",
    ""maps"": [
        {
            ""name"": ""VehicleController"",
            ""id"": ""388412d6-84a7-4cc1-923d-7de5a8528cf9"",
            ""actions"": [
                {
                    ""name"": ""HandBrake"",
                    ""type"": ""Value"",
                    ""id"": ""a304d9be-740b-4bef-9675-5beaa0a6283e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Acceleration"",
                    ""type"": ""Value"",
                    ""id"": ""a91f9cb2-e27c-4473-94b1-31c81abdb250"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SteeringAngle"",
                    ""type"": ""Value"",
                    ""id"": ""b1981d2d-28e9-4760-af5f-1d8513dddfd8"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""de7ce131-633a-4896-9b3a-55f0a24d3f72"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8b05fd45-22c7-4e22-9179-bf3686e0572d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc495650-6406-4ed6-b75f-c393aa0301ed"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""1a48f6fc-898f-4bdc-9182-c29561434cc9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""f0b8a7b7-19b0-4b40-9ee0-61893061c327"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""506ae158-ccfc-4f22-a39b-6f02e210d978"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""5d4952a1-5208-46e5-aad1-3131fc97a87c"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""294a926c-a965-4fbe-afb7-d5b5df749cc9"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e5463f04-5902-49bc-a7d6-2e71097e1323"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""afad3c56-efa8-469b-8753-fbf0ecf50cf0"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""VehicleController1"",
            ""id"": ""cd19db72-66d1-426b-bdc4-2cdb039bd84e"",
            ""actions"": [
                {
                    ""name"": ""HandBrake"",
                    ""type"": ""Value"",
                    ""id"": ""d6af80c6-a054-4e6b-ad07-42fc78f7949c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Acceleration"",
                    ""type"": ""Value"",
                    ""id"": ""063a296a-e341-4074-8949-15af5c545da1"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""SteeringAngle"",
                    ""type"": ""Value"",
                    ""id"": ""92649480-8745-4703-b48b-9a67b0168d90"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""1be86f32-3a52-4be0-9915-441636d7ef0a"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""45de612f-ee3a-416d-a300-dd157facbbde"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HandBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6a9b7e3-ceb8-424f-bcae-6b3bee94ee6e"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""fd4bf434-f22f-499c-9fd3-59097b18338c"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""918e9aaf-26d1-4385-b292-0a477a22401d"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""d391ce08-2b6c-4ba6-821a-02ae89835196"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Acceleration"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""1029efdc-d78a-4d30-a20c-47cd88626b9b"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""97fe6820-dec9-4f5a-b5c1-dce7f83fd70b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""87047285-543c-4e90-a510-2b51bc5cd1a6"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""abd45e8d-3cf6-4b17-948e-792cf7d17af5"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SteeringAngle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // VehicleController
        m_VehicleController = asset.FindActionMap("VehicleController", throwIfNotFound: true);
        m_VehicleController_HandBrake = m_VehicleController.FindAction("HandBrake", throwIfNotFound: true);
        m_VehicleController_Acceleration = m_VehicleController.FindAction("Acceleration", throwIfNotFound: true);
        m_VehicleController_SteeringAngle = m_VehicleController.FindAction("SteeringAngle", throwIfNotFound: true);
        // VehicleController1
        m_VehicleController1 = asset.FindActionMap("VehicleController1", throwIfNotFound: true);
        m_VehicleController1_HandBrake = m_VehicleController1.FindAction("HandBrake", throwIfNotFound: true);
        m_VehicleController1_Acceleration = m_VehicleController1.FindAction("Acceleration", throwIfNotFound: true);
        m_VehicleController1_SteeringAngle = m_VehicleController1.FindAction("SteeringAngle", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // VehicleController
    private readonly InputActionMap m_VehicleController;
    private IVehicleControllerActions m_VehicleControllerActionsCallbackInterface;
    private readonly InputAction m_VehicleController_HandBrake;
    private readonly InputAction m_VehicleController_Acceleration;
    private readonly InputAction m_VehicleController_SteeringAngle;
    public struct VehicleControllerActions
    {
        private @InputControls m_Wrapper;
        public VehicleControllerActions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @HandBrake => m_Wrapper.m_VehicleController_HandBrake;
        public InputAction @Acceleration => m_Wrapper.m_VehicleController_Acceleration;
        public InputAction @SteeringAngle => m_Wrapper.m_VehicleController_SteeringAngle;
        public InputActionMap Get() { return m_Wrapper.m_VehicleController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VehicleControllerActions set) { return set.Get(); }
        public void SetCallbacks(IVehicleControllerActions instance)
        {
            if (m_Wrapper.m_VehicleControllerActionsCallbackInterface != null)
            {
                @HandBrake.started -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnHandBrake;
                @HandBrake.performed -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnHandBrake;
                @HandBrake.canceled -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnHandBrake;
                @Acceleration.started -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnAcceleration;
                @Acceleration.performed -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnAcceleration;
                @Acceleration.canceled -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnAcceleration;
                @SteeringAngle.started -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnSteeringAngle;
                @SteeringAngle.performed -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnSteeringAngle;
                @SteeringAngle.canceled -= m_Wrapper.m_VehicleControllerActionsCallbackInterface.OnSteeringAngle;
            }
            m_Wrapper.m_VehicleControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HandBrake.started += instance.OnHandBrake;
                @HandBrake.performed += instance.OnHandBrake;
                @HandBrake.canceled += instance.OnHandBrake;
                @Acceleration.started += instance.OnAcceleration;
                @Acceleration.performed += instance.OnAcceleration;
                @Acceleration.canceled += instance.OnAcceleration;
                @SteeringAngle.started += instance.OnSteeringAngle;
                @SteeringAngle.performed += instance.OnSteeringAngle;
                @SteeringAngle.canceled += instance.OnSteeringAngle;
            }
        }
    }
    public VehicleControllerActions @VehicleController => new VehicleControllerActions(this);

    // VehicleController1
    private readonly InputActionMap m_VehicleController1;
    private IVehicleController1Actions m_VehicleController1ActionsCallbackInterface;
    private readonly InputAction m_VehicleController1_HandBrake;
    private readonly InputAction m_VehicleController1_Acceleration;
    private readonly InputAction m_VehicleController1_SteeringAngle;
    public struct VehicleController1Actions
    {
        private @InputControls m_Wrapper;
        public VehicleController1Actions(@InputControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @HandBrake => m_Wrapper.m_VehicleController1_HandBrake;
        public InputAction @Acceleration => m_Wrapper.m_VehicleController1_Acceleration;
        public InputAction @SteeringAngle => m_Wrapper.m_VehicleController1_SteeringAngle;
        public InputActionMap Get() { return m_Wrapper.m_VehicleController1; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VehicleController1Actions set) { return set.Get(); }
        public void SetCallbacks(IVehicleController1Actions instance)
        {
            if (m_Wrapper.m_VehicleController1ActionsCallbackInterface != null)
            {
                @HandBrake.started -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnHandBrake;
                @HandBrake.performed -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnHandBrake;
                @HandBrake.canceled -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnHandBrake;
                @Acceleration.started -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnAcceleration;
                @Acceleration.performed -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnAcceleration;
                @Acceleration.canceled -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnAcceleration;
                @SteeringAngle.started -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnSteeringAngle;
                @SteeringAngle.performed -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnSteeringAngle;
                @SteeringAngle.canceled -= m_Wrapper.m_VehicleController1ActionsCallbackInterface.OnSteeringAngle;
            }
            m_Wrapper.m_VehicleController1ActionsCallbackInterface = instance;
            if (instance != null)
            {
                @HandBrake.started += instance.OnHandBrake;
                @HandBrake.performed += instance.OnHandBrake;
                @HandBrake.canceled += instance.OnHandBrake;
                @Acceleration.started += instance.OnAcceleration;
                @Acceleration.performed += instance.OnAcceleration;
                @Acceleration.canceled += instance.OnAcceleration;
                @SteeringAngle.started += instance.OnSteeringAngle;
                @SteeringAngle.performed += instance.OnSteeringAngle;
                @SteeringAngle.canceled += instance.OnSteeringAngle;
            }
        }
    }
    public VehicleController1Actions @VehicleController1 => new VehicleController1Actions(this);
    public interface IVehicleControllerActions
    {
        void OnHandBrake(InputAction.CallbackContext context);
        void OnAcceleration(InputAction.CallbackContext context);
        void OnSteeringAngle(InputAction.CallbackContext context);
    }
    public interface IVehicleController1Actions
    {
        void OnHandBrake(InputAction.CallbackContext context);
        void OnAcceleration(InputAction.CallbackContext context);
        void OnSteeringAngle(InputAction.CallbackContext context);
    }
}
